<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2013 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>


<script >
function demop()
{
    
     
        alert("<?php echo $this->getAddress()->getCustomerAddressId(); ?>");
//    document.getElementById('billing-buttons-container').style.display = "block";
//    document.getElementById('billing').style.display = "none";
}

var selectState="<?php echo $this->escapeHtml($this->getAddress()->getRegion())?>";
 
function demo(a)
{
     
        selectState=a;
}
    
    var map = {'Arizona': 'AZ', 'Alabama':'AL','Alaska':'AK','Arkansas':'AR','American Samoa':'AS','California':'CA','Colorado':'CO','Connecticut':'CT','Delaware':'DE',
'District of Columbia':'DC','Florida':'FL','Federated States of Micronesia':'FM','Georgia':'GA','Hawaii':'HI','Guam':'GU','Idaho':'ID','Illinois':'IL','Iowa':'IA',
'Indiana':'IN','Kansas':'Ks','Kentucky':'KY','Louisiana':'LA','Maine':'ME','Maryland':'MD','Massachusetts':'MA',
'Marshall Islands':'MH','Michigan':'MI','Minnesota':'MN','Northern Mariana Islands':'MP','Mississippi':'MS','Missouri':'MO','Montana':'MT','North Carolina':'NC',
'North Dakota':'ND','Nebraska':'NE','New Hampshire':'NH','New Jersey':'NJ','New Mexico':'NM','New York':'NY','Nevada':'NV','Ohio':'OH','Oklahoma':'OK','Oregon':'OR','Pennsylvania':'PA',
'Puerto Rico':'PR','Palau':'PW','Rhode Island':'RI','South Carolina':'SC','South Dakota':'SD',
'Tennessee':'TN','Texas':'TX','U.S. Minor Outlying Islands':'UM','Utah':'UT','Virginia':'VA','Virgin Islands':'VI','Vermont':'VT','Washington':'WA','West Virginia':'WV','Wisconsin':'WA','Wyoming':'WY'};
  function getValue(state)
  {
    
        if (state in map) 
        {
           return map[state];
        } 
        else 
        {
           return 'Not US state!!!!';
        }
   }

     // create the XMLHttpRequest object, according browser
function get_XmlHttp() {
  // create the variable that will contain the instance of the XMLHttpRequest object (initially with null value)
  var xmlHttp = null;

  if(window.XMLHttpRequest) {		// for Forefox, IE7+, Opera, Safari, ...
    xmlHttp = new XMLHttpRequest();
  }
  else if(window.ActiveXObject) {	// for Internet Explorer 5 or 6
    xmlHttp = new ActiveXObject("Microsoft.XMLHTTP");
  }

  return xmlHttp;
}



function chckSpace(val){
    var pattr=/\s{2,}/g;
    if(val.match(pattr)){
        
       return val.replace(/\s{2,}/g," ");
    }
    else{return val;}
}


 function chkcontainOnlyWhitespace(val){
      var isnum = /^\s+/.test(val);
      if(isnum==true){
          
       return val.replace(/^\s+/,"");}
 else{return val;} 
 }        


function chkNonWordChar(vall){
    var pattrs=/[^A-Za-z0-9\s_]{2,}/g;
     if(vall.match(pattrs)){
   
     var result= vall.replace(/[^A-Za-z0-9\s_]{2,}/g,"");
  
     return result;
    }
    else{return vall;}
}

function chkZero(vall){
var patt=/^[^1-9]+\s[0_9a-zA-Z]+/g;
if(vall.match(patt))
{
return true;
}else{
    return false;
}

}

function chkZip(val){
var pat=/^[^1-9]+/g;

if(val.match(pat))
{
return true;
}else{
    return false;
}
}


function ifUss(){
    document.getElementById('shatam').style.display = "none";
        var array_resp="";
             
        var request =  get_XmlHttp();
     	var street = document.getElementById('billing:street1').value;
        
        
        
        var street2=document.getElementById("billing:street2").value 
        var city=document.getElementById('billing:city').value;
      
        var state=selectState;
      
	var zip=document.getElementById('billing:postcode').value;
     
        var abbr=getValue(state); 
    
    
      document.getElementById('pp').style.display = "block";
    //     alert("Please wait .... address validation is in process.");
      
         var  url = 'http://Fixaddress.com/API3/SAC/?address1='+street+"&address2="+street2+"&city="+city+"&state="+abbr+"&zip="+zip;     
    //    alert(url); 
         request.open("GET", url, false);			// define the request
      
         
         request.send(null);		// sends data
       
       
         var address = request.responseText;
   //     alert("kk="+address);
         
         if(address!="Internal Server Error Occurred !"){
             
         document.getElementById('hiddendivid').style.display = "block";
      //    alert("pirti");
         var foo = document.getElementById("hiddendivid"); 
      
         var myb = document.createElement('p');
         foo.appendChild(myb);
       
         
         
        
         var oridiv = document.getElementById("origionaladd");
        
         oridiv.appendChild(myb);
         var lab = document.createElement("label");
         var element = document.createElement("input");
      //   alert("oriadd==="+changecolor(street,street)+" , "+changecolor(city,city)+" , "+changecolor(state,state)+" , "+changecolor(zip,zip));
         var Oriadd=changecolor(street+" "+street2,street+" "+street2)+" , "+changecolor(city,city)+" , "+changecolor(state,state)+" , "+changecolor(zip,zip);    
       
             element.setAttribute("type", 'radio');
             element.setAttribute("value",Oriadd);
             element.setAttribute("name", 'radio');
           
             lab.appendChild(element);
             
             lab.innerHTML +=Oriadd;
            
             oridiv.appendChild(lab);
             oridiv.appendChild(myb);
         
         
         
         
     
         
      var add=JSON.parse(address);
         
      for(var j=0;j<=add.length-1;j++)
      { 
          
         var str = JSON.stringify(add[j]);
        
         var newArr = JSON.parse(str);
      
         var CorrectZip=changecolor(zip,newArr[9]);
         var CorrectStreet=changecolor(street,newArr[0]+" "+newArr[1]+" "+newArr[4]+" "+newArr[5]);
         var CorrectCity=changecolor(city,newArr[7]);
         var CorrectState=changecolor(newArr[8],newArr[8]);
         
         
         var chkString=CorrectStreet+" , "+CorrectCity+" , "+CorrectState+" , "+CorrectZip;;
           // alert(array_resp);
      if(array_resp!==chkString)
    
    {
         
         array_resp=CorrectStreet+" , "+CorrectCity+" , "+CorrectState+" , "+CorrectZip;
  
         
          var mybr = document.createElement('p');
          document.body.appendChild(mybr);
         
             //Add radio button
             var label = document.createElement("label");
             var element = document.createElement("input");
             
            //Assign different attributes to the element.
             element.setAttribute("type", 'radio');
             element.setAttribute("value",array_resp);
             element.setAttribute("name", 'radio');
           
             label.appendChild(element);
             label.innerHTML += array_resp;
              var foo = document.getElementById("hiddendivid"); 
             foo.appendChild(label);
            
             foo.appendChild(mybr);
           
      }
  }
        var coffee =  document.getElementsByName('radio');
 
         for (var i=0;i<coffee.length-1;i++)
  {
  
   if(i===0)
   {
  
      coffee[0].checked = true;
      myFunction('first');
    document.getElementById('billing-new-address-form').style.display = "none"; 
 
    document.getElementById('listboxadd').style.display = "none";
    document.getElementById('pp').style.display = "block";
    document.getElementById('billing-buttons-container').style.display = "block";
    document.getElementById('billing').style.display = "none";
   }
  }
     
         
}
else{
    alert("Sorry!!due to internal server error address validation is currently unavailable.");
    billing.save(); 
   document.getElementById('billing-buttons-container').style.display = "block";
   document.getElementById('billing').style.display = "none";
    
}       
    
}



function changeText2(){
    
        var array_resp="";
             
        var request =  get_XmlHttp();
     	var street = document.getElementById('billing:street1').value;
        
        
        
        var street2=document.getElementById("billing:street2").value 
        var city=document.getElementById('billing:city').value;
      
        var state=selectState;
      
	var zip=document.getElementById('billing:postcode').value;
     
        var abbr=getValue(state); 
        
       
        
        
   if(document.getElementById('billing-new-address-form').style.display=="none")
   {

    document.getElementById('billing-buttons-container').style.display = "block";
    
    document.getElementById('billing').style.display = "none";
    }
        
    else{
        
      street=  chckSpace(street);
      street=chkcontainOnlyWhitespace(street);
      street= chkNonWordChar(street);
      document.getElementById('billing:street1').value=street;
      
       street2=  chckSpace(street2);
       street2=chkcontainOnlyWhitespace(street2);
       street2= chkNonWordChar(street2);
       document.getElementById("billing:street2").value = street2;
       
       
       city=  chckSpace(city);
       city=chkcontainOnlyWhitespace(city);
       city= chkNonWordChar(city);
       document.getElementById('billing:city').value=city;
       
        zip=  chckSpace(zip);
        zip=chkcontainOnlyWhitespace(zip);
       document.getElementById('billing:postcode').value=zip;
       

            var isnum = /^\d+$/.test(street);
      
        if(isnum==true){
            alert("Enter correct street address.");
        }else{
            
            
        if(street.length==0){alert("Street address is blank.");}else{   
        if(street.length<6){alert("Street name is too small.");}else{
        if(street.length>100){alert("Street name is too large.");}else{   
        if(chkZero(street)==true){alert("Invalid house number.");}else{    
        if(city.length==0){alert("City name is blank.");}else{    
        if(city.length<3){alert("City name is too small.");}else{
        if(chkZip(zip)==true){alert("Invalid zip.");}else{      
        if(zip.length==0){alert("Zip is blank.");}else{
        if(zip.length<5){alert("Zip length is too small.");}else{    
        if(zip.length>11){alert("Zip length is too large.");}else{    
            
           var Pattern = /^\d{2,8}\s+[0-9A-Za-z]+/g;
           
          // alert(street.match(Pattern));
           if (!street.match(Pattern)) {
              // alert('error');
                alert("Invalid street address.");
               return;
           }
      else{
          var adrregex = /\d{2}\s/g;
          if(!street.match(adrregex)){
              alert("House number is required in the street address.");
          }
      
        else{
              var patt=/\d{7}\s*/g;
               if(street.match(patt)){
              alert("Invalid street address.");
          }
        
        else{
        
        
        
          var e = document.getElementById("billing:country_id");
          var strUser = e.options[e.selectedIndex].text;    
           // alert('show');
      if(strUser=='United States')
      {
          document.getElementById('shatam').style.display = "block";
 
   setTimeout(function(){ifUss()},3000);

}

else{
  
    billing.save(); 
  document.getElementById('billing-buttons-container').style.display = "block";
  document.getElementById('billing').style.display = "none";
   }
   
   
   
  }}}}}}}}}}}}}}
   
   }
   
   
   
}



function myFunction(k)
{
 
var coffee =  document.getElementsByName('radio');

var txt = "";

var i;
   if(document.getElementById('billing-new-address-form').style.display=="none")
   {
     if(document.getElementById('pp').style.display == "block"){
         myFunction2(coffee,k);
     
          } 
         else{
             
               billing.save(); 
  
               document.getElementById('billing-buttons-container').style.display = "none";
               document.getElementById('billing').style.display = "block";
              }
    }
   else
 {
     myFunction2(coffee,k);
 

 }
 
}
        
function myFunction2(coffee,k){
var txt = "";

var i;

 if(coffee.length > 0)
  {
    if(coffee[0].checked)
  {
           var n=coffee[0].parentNode.childNodes.length;
     
         for (var l=0;l<=n-1;l++){
             
         txt = txt + coffee[0].parentNode.childNodes[l].innerHTML + " ";
     
                }
        
          var replace=txt.replace(/undefined/gi,",");
        //   txt = txt + coffee[0].value+"";
         var result=replace.split(",");
          document.getElementById("billing:street2").value = ""; 
           document.getElementById('billing:city').value=result[1];
           document.getElementById('billing:street1').value=result[0];
            
           document.getElementById('billing:postcode').value=result[3];
       
           if(k==='sub'){
             
          
            document.getElementById('billing-buttons-container').style.display = "none";
          
            document.getElementById('billing').style.display = "block";
          
            document.getElementById('listboxadd').style.display = "block";
         
            document.getElementById('billing-new-address-form').style.display = "block"; 
         
            document.getElementById('pp').style.display = "none";
            var h;
          
            for (h=0;coffee.length!==0;h--)
            {
        
                   
                coffee[h].parentNode.parentNode.removeChild( coffee[h].parentNode );
                h++;
               
                 
              }
              
              document.getElementById('hiddendivid').style.display="none";
          
               billing.save(); 
            }
}
else
{
      
for (i=1;i<=coffee.length-1;i++)
  {     
     
          if (coffee[i].checked)
        {
            
         var n=coffee[i].parentNode.childNodes.length;
      
         for (l=0;l<=n-1;l++){
             
         txt = txt + coffee[i].parentNode.childNodes[l].innerHTML + " ";
      
                }
        
          var replac=txt.replace(/undefined/gi,",");
     
          var result=replac.split(",");
    
           document.getElementById("billing:street2").value = "";  
           document.getElementById('billing:city').value=result[1];
           document.getElementById('billing:street1').value=result[0];
            
           document.getElementById('billing:postcode').value=result[3];
           if(k==='sub'){
             
            document.getElementById('billing-buttons-container').style.display = "none";
          
            document.getElementById('billing').style.display = "block";
         
            document.getElementById('listboxadd').style.display = "block";
         
            document.getElementById('billing-new-address-form').style.display = "block"; 
           
            document.getElementById('pp').style.display = "none";

            var d;
     
            for (d=0;coffee.length!==0;d--)
            {
          
            coffee[d].parentNode.parentNode.removeChild( coffee[d].parentNode );
            d++;
            }
            document.getElementById('hiddendivid').style.display="none";
             billing.save();
                    }
        }
      }
   }
 }
 else{
     

   changeText2();

   document.getElementById('billing-buttons-container').style.display = "block";
   document.getElementById('billing').style.display = "none";
   }
}  
  

function changecolor(val1,val2){
var result;
var m=val1.indexOf(val2);

         if(m===-1){
            
            result=  "<span style='color:#1e7ec8;'>"+val2+"</span>";
                }
         else{
          
          result=  "<span style='color:#000000;'>"+val2+"</span>";
          
            }
return result;
}




 var specialKeys = new Array();
        specialKeys.push(8); //Backspace
        function IsNumeric(e) {
     
            var keyCode = e.which ? e.which : e.keyCode
            var ret = ((keyCode >= 48 && keyCode <= 57) || specialKeys.indexOf(keyCode) != -1||keyCode==45);
          if(ret==false){
            if((keyCode >= 65 && keyCode <= 90) || (keyCode >= 97 && keyCode <= 122))
            {
            alert("Alphabets are not allowed.");
            }
            else
            {
                alert("Special charectors are not allowed.");
            }
            } 
     
            return ret;//}
        }
        
        
        
         var specialKeys2 = new Array();
        specialKeys2.push(8); //Backspace
        specialKeys2.push(9); //Tab
        specialKeys2.push(46); //Delete
        specialKeys2.push(36); //Home
        specialKeys2.push(35); //End
        specialKeys2.push(37); //Left
        specialKeys2.push(39); //Right
        function IsAlphaNumeric(e) {
            var keyCode = e.keyCode == 0 ? e.charCode : e.keyCode;
            var ret = ((keyCode >= 48 && keyCode <= 57) || (keyCode >= 65 && keyCode <= 90) || (keyCode >= 97 && keyCode <= 122) || (specialKeys2.indexOf(e.keyCode) != -1 && e.charCode != e.keyCode));
          
            return ret;
        }
        
        
        
         var specialKeys23 = new Array();
        specialKeys23.push(8); //Backspace
        specialKeys23.push(9); //Tab
        specialKeys23.push(46); //Delete
        specialKeys23.push(36); //Home
        specialKeys23.push(35); //End
        specialKeys23.push(37); //Left
        specialKeys23.push(39); //Right
        function IsAlpha(e) {
            
            var keyCode = e.keyCode == 0 ? e.charCode : e.keyCode;
            var ret = ((keyCode >= 65 && keyCode <= 90) || (keyCode >= 97 && keyCode <= 122) || (specialKeys23.indexOf(e.keyCode) != -1 && e.charCode != e.keyCode));
    
   
        if(keyCode=='32'||keyCode=='39'||keyCode=='45'||keyCode=='46'){
            return true;}else{  
           
          if(ret==false){
              
             if(keyCode>='48'&& keyCode<='57')
                {
                    alert("Numbers are not allowed.");
                }else{
                             alert("Only  '   -  . these special charectors are allowed.");
                }
            } 
            
        return ret;
        }
        } 
        
        
 function validateSpecialCharacters(e) 
{ 
var keyCode = e.keyCode == 0 ? e.charCode : e.keyCode;

var spclChars = "!@$%^*()<>\\|}{[]_+=\";"; // specify special characters 
var content = document.getElementById("billing:street1").value; 

if (spclChars.indexOf(String.fromCharCode(keyCode)) != -1) 
{ 
alert ("Only  -  .  ,  &  '   #  these special charectors are allowed."); 

return false; 
} 
} 
//<p class="required"><?php echo $this->__('* Required Fields') ?></p>
</script>
<form id="co-billing-form" action="">
<fieldset>
    <ul class="form-list" id="billingAddress">
    <?php if ($this->customerHasAddresses()): ?> 
        <li class="wide" id="listboxadd" style="display: block;">
            <label for="billing-address-select"><?php echo $this->__('Select a billing address from your address book or enter a new address.') ?></label> 
            <div class="input-box">
                <?php echo $this->getAddressesHtmlSelect('billing') ?>
            </div>
        </li>
    <?php endif; ?>
    <li   id="billing-new-address-form"<?php if ($this->customerHasAddresses()): ?> style="display:none;"<?php endif; ?> >
        <fieldset>
            <input type="hidden" name="billing[address_id]" value="<?php echo $this->getAddress()->getId() ?>" id="billing:address_id" />
            <ul>
                <li class="fields"><?php echo $this->getLayout()->createBlock('customer/widget_name')->setObject($this->getAddress()->getFirstname() ? $this->getAddress() : $this->getQuote()->getCustomer())->setForceUseCustomerRequiredAttributes(!$this->isCustomerLoggedIn())->setFieldIdFormat('billing:%s')->setFieldNameFormat('billing[%s]')->toHtml() ?></li>
                <li class="fields">
                    <div class="field">
                        <label for="billing:company"><?php echo $this->__('Company') ?></label>
                        <div class="input-box">
                            <input type="text" id="billing:company" name="billing[company]" value="<?php echo $this->escapeHtml($this->getAddress()->getCompany()) ?>" title="<?php echo $this->__('Company') ?>" class="input-text <?php echo $this->helper('customer/address')->getAttributeValidationClass('company') ?>" />
                        </div>
                    </div>
        <?php if(!$this->isCustomerLoggedIn()): ?>
                    <div class="field">
                        <label for="billing:email" class="required"><em>*</em><?php echo $this->__('Email Address') ?></label>
                        <div class="input-box">
                            <input type="text" name="billing[email]" id="billing:email" value="<?php echo $this->escapeHtml($this->getAddress()->getEmail()) ?>" title="<?php echo $this->__('Email Address') ?>" class="input-text validate-email required-entry" />
                        </div>
                    </div>
        <?php endif; ?>
                </li>
        <?php $_streetValidationClass = $this->helper('customer/address')->getAttributeValidationClass('street'); ?>
                <li class="wide">
                    <label for="billing:street1" class="required"><em>*</em><?php echo $this->__('Street Address') ?></label>
                    <div class="input-box">
                        <input type="text" placeholder="Line 1" title="<?php echo $this->__('Street Address') ?>" name="billing[street][]" id="billing:street1" value="<?php echo $this->escapeHtml($this->getAddress()->getStreet(1)) ?>" class="input-text <?php echo $_streetValidationClass ?>" onkeypress="return validateSpecialCharacters(event);" ondrop="return false;"
        onpaste="return false;"/>
                    </div>
                </li>
        <?php $_streetValidationClass = trim(str_replace('required-entry', '', $_streetValidationClass)); ?>
        <?php for ($_i = 2, $_n = $this->helper('customer/address')->getStreetLines(); $_i <= $_n; $_i++): ?>
                <li class="wide">
                    <div class="input-box">
                        <input type="text" placeholder="Line 2" title="<?php echo $this->__('Street Address %s', $_i) ?>" name="billing[street][]" id="billing:street<?php echo $_i ?>" value="<?php echo $this->escapeHtml($this->getAddress()->getStreet($_i)) ?>" class="input-text <?php echo $_streetValidationClass ?>" onkeypress="return validateSpecialCharacters(event);" ondrop="return false;"
        onpaste="return false;"/>
                    </div>
                </li>
        <?php endfor; ?>
                <?php if ($this->helper('customer/address')->isVatAttributeVisible()) : ?>
                <li class="wide">
                    <label for="billing:vat_id"><?php echo $this->__('VAT Number') ?></label>
                    <div class="input-box">
                        <input type="text" id="billing:vat_id" name="billing[vat_id]" value="<?php echo $this->escapeHtml($this->getAddress()->getVatId()) ?>" title="<?php echo $this->__('VAT Number') ?>" class="input-text <?php echo $this->helper('customer/address')->getAttributeValidationClass('vat_id') ?>" />
                    </div>
                </li>
                <?php endif; ?>
                <li class="fields">
                    <div class="field">
                        <label for="billing:city" class="required"><em>*</em><?php echo $this->__('City') ?></label>
                        <div class="input-box">
                            <input type="text" title="<?php echo $this->__('City') ?>" name="billing[city]" value="<?php echo $this->escapeHtml($this->getAddress()->getCity()) ?>" class="input-text <?php echo $this->helper('customer/address')->getAttributeValidationClass('city') ?>" id="billing:city" onkeypress="return IsAlpha(event);" ondrop="return false;"
        onpaste="return false;"/>
                        </div>
                    </div>
                    <div class="field">
                        <label for="billing:region_id" class="required"><em>*</em><?php echo $this->__('State/Province') ?></label>
                        <div class="input-box">
                            <select id="billing:region_id" onchange="demo(this.options[this.selectedIndex].text)"  name="billing[region_id]" title="<?php echo $this->__('State/Province') ?>" class="validate-select" style="display:none;">
                                <option value=""><?php echo $this->__('Please select region, state or province') ?></option>
                            </select>
                            <script type="text/javascript">
                            //<![CDATA[
                                $('billing:region_id').setAttribute('defaultValue',  "<?php echo $this->getAddress()->getRegionId() ?>");
                            //]]>
                            </script>
                            <input type="text" id="billing:region" name="billing[region]" value="<?php echo $this->escapeHtml($this->getAddress()->getRegion()) ?>"  title="<?php echo $this->__('State/Province') ?>" class="input-text <?php echo $this->helper('customer/address')->getAttributeValidationClass('region') ?>" style="display:none;" />
                        </div>
                    </div>
                </li>
                <li class="fields">
                    <div class="field">
                        <label for="billing:postcode" class="required"><em>*</em><?php echo $this->__('Zip/Postal Code') ?></label>
                        <div class="input-box">
                            <input type="text" title="<?php echo $this->__('Zip/Postal Code') ?>" name="billing[postcode]" id="billing:postcode" value="<?php echo $this->escapeHtml($this->getAddress()->getPostcode()) ?>" class="input-text validate-zip-international <?php echo $this->helper('customer/address')->getAttributeValidationClass('postcode') ?>" onkeypress="return IsNumeric(event);" ondrop="return false;"
        onpaste="return false;"/>
                        </div>
                    </div>
                    <div class="field">
                        <label for="billing:country_id" class="required"><em>*</em><?php echo $this->__('Country') ?></label>
                        <div class="input-box">
                            <?php echo $this->getCountryHtmlSelect('billing') ?>
                        </div>
                    </div>
                </li>
                <li class="fields">
                    <div class="field">
                        <label for="billing:telephone" class="required"><em>*</em><?php echo $this->__('Telephone') ?></label>
                        <div class="input-box">
                            <input type="text" name="billing[telephone]" value="<?php echo $this->escapeHtml($this->getAddress()->getTelephone()) ?>" title="<?php echo $this->__('Telephone') ?>" class="input-text <?php echo $this->helper('customer/address')->getAttributeValidationClass('telephone') ?>" id="billing:telephone" />
                        </div>
                    </div>
                    <div class="field">
                        <label for="billing:fax"><?php echo $this->__('Fax') ?></label>
                        <div class="input-box">
                            <input type="text" name="billing[fax]" value="<?php echo $this->escapeHtml($this->getAddress()->getFax()) ?>" title="<?php echo $this->__('Fax') ?>" class="input-text <?php echo $this->helper('customer/address')->getAttributeValidationClass('fax') ?>" id="billing:fax" />
                        </div>
                    </div>
                </li>
                <?php if(!$this->isCustomerLoggedIn()): ?>

        <?php $_dob = $this->getLayout()->createBlock('customer/widget_dob') ?>
        <?php $_gender = $this->getLayout()->createBlock('customer/widget_gender') ?>
            <?php if ($_dob->isEnabled() || $_gender->isEnabled()): ?>
                <li class="fields">
                <?php if ($_dob->isEnabled()): ?>
                    <div class="field">
                        <?php echo $_dob->setDate($this->getQuote()->getCustomerDob())->setFieldIdFormat('billing:%s')->setFieldNameFormat('billing[%s]')->toHtml() ?>
                    </div>
                <?php endif; ?>
                <?php if ($_gender->isEnabled()): ?>
                    <div class="field">
                        <?php echo $_gender->setGender($this->getQuote()->getCustomerGender())->setFieldIdFormat('billing:%s')->setFieldNameFormat('billing[%s]')->toHtml() ?>
                    </div>
                <?php endif ?>
                </li>
            <?php endif ?>

        <?php $_taxvat = $this->getLayout()->createBlock('customer/widget_taxvat') ?>
        <?php if ($_taxvat->isEnabled()): ?>
                <li>
                    <?php echo $_taxvat->setTaxvat($this->getQuote()->getCustomerTaxvat())->setFieldIdFormat('billing:%s')->setFieldNameFormat('billing[%s]')->toHtml() ?>
                </li>
        <?php endif ?>

                <li class="fields" id="register-customer-password">
                    <div class="field">
                        <label for="billing:customer_password" class="required"><em>*</em><?php echo $this->__('Password') ?></label>
                        <div class="input-box">
                            <input type="password" name="billing[customer_password]" id="billing:customer_password" title="<?php echo $this->__('Password') ?>" class="input-text required-entry validate-password" />
                        </div>
                    </div>
                    <div class="field">
                        <label for="billing:confirm_password" class="required"><em>*</em><?php echo $this->__('Confirm Password') ?></label>
                        <div class="input-box">
                            <input type="password" name="billing[confirm_password]" title="<?php echo $this->__('Confirm Password') ?>" id="billing:confirm_password" class="input-text required-entry validate-cpassword" />
                        </div>
                    </div>
                </li>
                <?php endif; ?>
               
            </ul>
        </fieldset>
        <p class="required"><?php echo $this->__('* Required Fields') ?></p>
    </li>
    
    
    
              <?php if ($this->isCustomerLoggedIn() && $this->customerHasAddresses()):?>
                    <li class="control" id="pp" style="display: none;">
                        <input type="checkbox" name="billing[save_in_address_book]" value="1" title="<?php echo $this->__('Save in address book') ?>" id="billing:save_in_address_book" onchange="if(window.shipping) shipping.setSameAsBilling(false);"<?php if ($this->getAddress()->getSaveInAddressBook()):?> checked="checked"<?php endif;?> class="checkbox" /><label for="billing:save_in_address_book"><?php echo $this->__('Save in address book') ?></label>
                    </li>
                <?php else:?>
                    <li class="no-display"><input type="hidden" name="billing[save_in_address_book]" value="1" /></li>
                <?php endif; ?>
                <?php echo $this->getChildHtml('form.additional.info'); ?>
                    
                    
                    
                    
                    
                    
    <?php /* Extensions placeholder */ ?>
    <?php echo $this->getChildHtml('checkout.onepage.billing.extra')?>
    <?php if ($this->canShip()): ?>
        <li class="control">
            <input type="radio" name="billing[use_for_shipping]" id="billing:use_for_shipping_yes" value="1"<?php if ($this->isUseBillingAddressForShipping()) {?> checked="checked"<?php }?> title="<?php echo  $this->__('Ship to this address') ?>" onclick="$('shipping:same_as_billing').checked = true;" class="radio" /><label for="billing:use_for_shipping_yes"><?php echo  $this->__('Ship to this address') ?></label></li>
        <li class="control">
            <input type="radio" name="billing[use_for_shipping]" id="billing:use_for_shipping_no" value="0"<?php if (!$this->isUseBillingAddressForShipping()) {?> checked="checked"<?php }?> title="<?php echo $this->__('Ship to different address') ?>" onclick="$('shipping:same_as_billing').checked = false;" class="radio" /><label for="billing:use_for_shipping_no"><?php echo $this->__('Ship to different address') ?></label>
        </li>
    <?php endif; ?>
    </ul>
    <?php if (!$this->canShip()): ?>
        <input type="hidden" name="billing[use_for_shipping]" value="1" />
    <?php endif; ?>
    <div class="buttons-set" id="billing">
      
        <button type="button" class="button" onclick="changeText2()"><span><span><?php echo $this->__('Continue') ?></span></span></button>
       <div id="shatam" style="display: none;" >
        <img    src="<?php echo $this->getSkinUrl('images/opc-ajax-loader.gif') ?>" alt="<?php echo $this->__('Please wait .... address validation is in process...') ?>" title="<?php echo $this->__('Please wait .... address validation is in process') ?>" class="v-middle" /> <?php echo $this->__('Please wait address validation is in process..') ?>  
        </div>
    </div>
      
        
   <div class="fieldset" id="hiddendivid" style="display: none;">
         <h2 class="legend">Correct Addresses</h2>
     There's a problem with the address provided - we've marked our suggestions  in  below. Please choose which version of the address you want to use, and click  to the address you want to select.
     <p></p>
     
      <div id="origionaladd">
           <h4>Address you entered...<h4>
      </div>

     <h3>Corrected addresses:<h3>
         
  </div>

  
    <div class="buttons-set" id="billing-buttons-container" style="display: none;">
    
        <button type="button" title="<?php echo $this->__('Continue') ?>" class="button" onclick="myFunction('sub')"><span><span><?php echo $this->__('Click To Continue') ?></span></span></button>
        <span class="please-wait" id="billing-please-wait" style="display:none;">
            <img src="<?php echo $this->getSkinUrl('images/opc-ajax-loader.gif') ?>" alt="<?php echo $this->__('Loading next step...') ?>" title="<?php echo $this->__('Loading next step...') ?>" class="v-middle" /> <?php echo $this->__('Loading next step...') ?>
        </span>
    </div>
    
</fieldset>
</form>
<script type="text/javascript">
//<![CDATA[
    var billing = new Billing('co-billing-form', '<?php echo $this->getUrl('checkout/onepage/getAddress') ?>address/', '<?php echo $this->getUrl('checkout/onepage/saveBilling') ?>');
  
    var billingForm = new VarienForm('co-billing-form');

    //billingForm.setElementsRelation('billing:country_id', 'billing:region', '<?php echo $this->getUrl('directory/json/childRegion') ?>', '<?php echo $this->__('Select State/Province...') ?>');
    $('billing-address-select') && billing.newAddress(!$('billing-address-select').value);

    var billingRegionUpdater = new RegionUpdater('billing:country_id', 'billing:region', 'billing:region_id', <?php echo $this->helper('directory')->getRegionJson() ?>, undefined, 'billing:postcode');
//]]>
</script>
